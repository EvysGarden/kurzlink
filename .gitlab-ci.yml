variables:
  CI_REGISTRY_IMAGE: kurzlink

stages:
  - build
  - deploy

# a single step to avoid caching libraries
build-and-verify-kurzlink:
  stage: build
  image: rust:latest
  cache:
    key: cargo-cache
    paths:
      - target/
  artifacts:
    paths:
      - target/
  script:
    - openssl version
    - cargo build
    - rustup component add clippy
    - cargo clippy -- -D warnings
    - cargo test


generate-files:
  stage: deploy
  image: rust:latest
  cache:
    key: cargo-cache
    paths:
      - target/
  dependencies:
    - build-and-verify-kurzlink
  artifacts:
    paths:
      - output/
  script:
    - openssl version
    - cargo run -- --nocheck --generate

docker:deploy:
  stage: deploy
  image: docker:latest
  # rules:
    # - if: $CI_COMMIT_BRANCH == "main"
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest