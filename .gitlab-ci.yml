variables:
  CI_REGISTRY_IMAGE: kurzlink
  CARGO_HOME: $CI_PROJECT_DIR/.cargo

stages:
  - build
  - deploy

# a single step to avoid caching libraries
build-and-verify-kurzlink:
  stage: build
  image: rust:latest
  cache:
    key: cargo-cache
    paths:
      - .cargo/
  artifacts:
    paths:
      - target/debug/kurzlink
  script:
    - openssl version
    - cargo build
    - rustup component add clippy
    - cargo clippy -- -D warnings
    - cargo test

docker:deploy:
  stage: deploy
  image: docker:latest
  cache:
    key: cargo-cache
    paths:
      - .cargo/
  services:
    - docker:dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build --pull --tag $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_SHA --tag $CI_REGISTRY/$CI_PROJECT_PATH:latest .
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        docker push $CI_REGISTRY/$CI_PROJECT_PATH:latest
      fi
    - docker push $CI_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_SHA
